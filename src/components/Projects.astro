---
import votacionesImg from "../assets/votacionesProject.png";
import appleImg from "../assets/appleProject.png";
import usersImg from "../assets/usersAppProject.png";
import githubImg from "../assets/githubIcon.png";
import mobxImg from "../assets/mobxProject.png";
import weatherImg from "../assets/weatherProject.png";

const projects = [
    {
        img: votacionesImg,
        title: "Elecciones 23J",
        description:
            "Web application, developed with React, where users can view information related to elections and participate through voting.",
        github: "https://github.com/RubenValls/votaciones23j-front",
        demo: "https://votaciones23j-front.vercel.app/",
    },
    {
        img: appleImg,
        title: "Apple Landing",
        description:
            "Apple's homepage based on the March 2023 web landing page. Created using HTML and CSS.",
        github: "https://github.com/RubenValls/HTML-CSS-Apple-Main-Page",
        demo: "https://html-css-apple-main-page.vercel.app/",
    },
    {
        img: usersImg,
        title: "Users App",
        description:
            "Web application focused on user registration through a form and performing actions on them using a data table. All of this managed by Redux state.",
        github: "https://github.com/RubenValls/Users-SingUp",
        demo: "https://users-singup.vercel.app/",
    },
    {
        img: mobxImg,
        title: "MobX Cart App",
        description:
            "State management using MobX to add, purchase, or discard products and obtain statistics related to these actions.",
        github: "https://github.com/RubenValls/shoppingCart-MobX-Pattern/",
        demo: "https://rubenvalls.github.io/shoppingCart-MobX-Pattern/",
    },
    {
        img: weatherImg,
        title: "WeatherApp",
        description:
            "Web application to learn about the weather conditions of a specific area along with the Google Maps map.",
        github: "https://github.com/RubenValls/Weather-App_React",
        demo: "https://rubenvalls.github.io/Weather-App_React/",
    },
];
---

<div class="projects-container">
    <h1>Projects</h1>
    <section class="articles">
        {
            projects.map((project) => {
                return (
                    <article>
                        <div class="article-wrapper">
                            <figure>
                                <img src={project.img} alt={project.title} />
                            </figure>
                            <div class="article-body">
                                <h2>{project.title}</h2>
                                <p>{project.description}</p>
                                <button class="button-35" role="button">
                                    <a href={project.demo} target="_blank">
                                        Demo
                                    </a>
                                </button>
                            </div>
                        </div>
                    </article>
                );
            })
        }
        <article>
            <div class="article-wrapper">
                <figure>
                    <img src={githubImg} alt="github" />
                </figure>
                <div class="article-body">
                    <h2>'See more'</h2>
                    <p>
                        'More projects are available at my GitHub repository.
                        Check it out.'
                    </p>
                        <button class="button-35" role="button">
                            <a href="https://github.com/RubenValls" target="_blank">
                                Visit Github
                            </a>
                        </button>
                </div>
            </div>
        </article>
    </section>
</div>

<style>
    .projects-container {
        text-align: center;
    }
    article {
        --img-scale: 1.001;
        --title-color: black;
        --link-icon-translate: -20px;
        --link-icon-opacity: 0;
        position: relative;
        border-radius: 16px;
        box-shadow: none;
        background: #fff;
        transform-origin: center;
        transition: all 0.4s ease-in-out;
        overflow: hidden;
    }

    article a::after {
        position: absolute;
        inset-block: 0;
        inset-inline: 0;
        cursor: pointer;
        content: "";
    }

    /* basic article elements styling */
    article h2 {
        margin: 0 0 18px 0;
        font-size: 1.9rem;
        letter-spacing: 0.06em;
        color: var(--title-color);
        transition: color 0.3s ease-out;
    }

    figure {
        margin: 0;
        padding: 0;
        aspect-ratio: 16 / 9;
        overflow: hidden;
    }

    article img {
        max-width: 100%;
        transform-origin: center;
        transform: scale(var(--img-scale));
        transition: transform 0.4s ease-in-out;
    }

    .article-body {
        padding: 24px;
    }

    .article-body p {
        height: 80px;
    } 

    article a {
        display: inline-flex;
        align-items: center;
        text-decoration: none;
        color: rgb(18, 18, 18);
    }

    article a:focus {
        outline: 1px dotted rgba(18, 18, 18);
    }

    article a .icon {
        min-width: 24px;
        width: 24px;
        height: 24px;
        margin-left: 5px;
        transform: translateX(var(--link-icon-translate));
        opacity: var(--link-icon-opacity);
        transition: all 0.3s;
    }

    /* using the has() relational pseudo selector to update our custom properties */
    article:has(:hover, :focus) {
        --img-scale: 1.1;
        --title-color: rgba(18, 18, 18);
        --link-icon-translate: 0;
        --link-icon-opacity: 1;
        box-shadow: rgba(0, 0, 0, 0.16) 0px 10px 36px 0px,
            rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;
    }

    /************************ 
Generic layout (demo looks)
**************************/

    *,
    *::before,
    *::after {
        box-sizing: border-box;
    }

    .articles {
        display: grid;
        max-width: 1200px;
        margin-inline: auto;
        padding-inline: 24px;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 24px;
    }

    @media screen and (max-width: 960px) {
        article {
            container: card/inline-size;
        }
        .article-body p {
            display: none;
        }
    }

    @container card (min-width: 380px) {
        .article-wrapper {
            display: grid;
            grid-template-columns: 100px 1fr;
            gap: 16px;
        }
        .article-body {
            padding-left: 0;
        }
        figure {
            width: 100%;
            height: 100%;
            overflow: hidden;
        }
        figure img {
            height: 100%;
            aspect-ratio: 1;
            object-fit: cover;
        }
    }

    .sr-only:not(:focus):not(:active) {
        clip: rect(0 0 0 0);
        clip-path: inset(50%);
        height: 1px;
        overflow: hidden;
        position: absolute;
        white-space: nowrap;
        width: 1px;
    }

    .button-35 {
        align-items: center;
        background-color: #fff;
        border-radius: 12px;
        box-shadow: transparent 0 0 0 3px, rgba(18, 18, 18, 0.1) 0 6px 20px;
        box-sizing: border-box;
        color: #121212;
        cursor: pointer;
        display: inline-flex;
        flex: 1 1 auto;
        font-size: 1.2rem;
        font-weight: 700;
        justify-content: center;
        line-height: 1;
        margin: 10px;
        outline: none;
        padding: 1rem 1.2rem;
        text-align: center;
        text-decoration: none;
        transition: box-shadow 0.2s, -webkit-box-shadow 0.2s;
        white-space: nowrap;
        border: 0;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
    }

    .button-35:hover {
        box-shadow: #121212 0 0 0 3px, transparent 0 0 0 0;
    }
</style>
